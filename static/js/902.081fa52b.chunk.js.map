{"version":3,"file":"static/js/902.081fa52b.chunk.js","mappings":"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","sources":["components/PhoneBook/PhoneBook.styled.jsx","components/PhoneBook/PhoneBook.jsx","components/Form/Form.jsx","pages/Contacts.styled.jsx","components/Filter/Filter.jsx","components/Contacts/ContactList.styled.jsx","components/Contacts/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  font-size: 30px;\n  font-weight: 600;\n  margin-right: 20px;\n`;\nexport const Label = styled.label`\n  font-size: 20px;\n  display: inline-grid;\n  margin-bottom: 15px;\n  margin-right: 10px;\n`;\n\nexport const Input = styled.input`\n  font-size: 27px;\n  margin-top: 15px;\n  border-radius: 7px;\n`;\nexport const Form = styled.form`\n  display: block;\n  padding: 20px;\n  border: 1px solid black;\n  width: 300px;\n  height: 270px;\n  border-radius: 10px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  margin-top: 40px;\n  width: 85px;\n  height: 40px;\n  background-color: transparent;\n  border-radius: 10px;\n  cursor: pointer;\n  &:hover {\n    background-color: aqua;\n  }\n`;\n\nexport const ContactList = styled.ul``;\n\nexport const ContactItem = styled.li`\n  letter-spacing: 1px;\n  margin-bottom: 10px;\n`;\n\nexport const Name = styled.span`\n  width: 160px;\n`;\n\nexport const Number = styled.span`\n  width: 80px;\n`;\n","import { Form, Button, Label, Input } from './PhoneBook.styled';\n\nimport PropTypes from 'prop-types';\n\nconst PhoneBook = ({ SubmitForm, ChangeInput, options }) => {\n  const { name, number } = options;\n  return (\n    <>\n      <Form onSubmit={SubmitForm}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={ChangeInput}\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={ChangeInput}\n          />\n        </Label>\n\n        <Button type=\"submit\" disabled={!name || !number}>\n          Add contact\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nPhoneBook.propTypes = {\n  options: PropTypes.object.isRequired,\n};\nexport { PhoneBook };\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { PhoneBook } from 'components/PhoneBook/PhoneBook';\nimport { addContact } from 'services/api';\nimport { selectContactList } from 'redux/selectors';\n\n//\nconst Form = () => {\n  const contactList = useSelector(selectContactList);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(``);\n  const [number, setNumber] = useState(``);\n  const state = {\n    name,\n    number,\n  };\n\n  const onSubmit = data => {\n    if (contactList.find(({ name }) => name === data.name)) {\n      alert(`${data.name} is already in contacts`);\n      return contactList;\n    }\n    console.log(data);\n    dispatch(addContact(data));\n  };\n\n  const submitForm = evt => {\n    evt.preventDefault();\n    onSubmit(state);\n    setName(``);\n    setNumber(``);\n  };\n\n  const changeInput = evt => {\n    const { name } = evt.target;\n    switch (name) {\n      case `name`:\n        setName(evt.target.value);\n        break;\n      case `number`:\n        setNumber(evt.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <PhoneBook\n      SubmitForm={submitForm}\n      ChangeInput={changeInput}\n      options={state}\n    />\n  );\n};\n\nexport { Form };\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  max-width: calc(100% - 40px);\n  padding: 20px;\n  margin: 20px auto;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n`;\n\nexport const Container = styled.div`\n  display: block;\n  margin-right: 300px;\n`;\n","import { Label, Input } from 'components/PhoneBook/PhoneBook.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { filterReducer } from 'redux/Filter/filterReducer';\n\n//\nconst { handleChangeFilter } = filterReducer.actions;\n//\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n\n  const changeFilter = e => {\n    dispatch(handleChangeFilter(e.target.value));\n  };\n  return (\n    <>\n      <Label htmlFor=\"1\">Find contacts by name</Label>\n      <Input\n        id=\"1\"\n        type=\"text\"\n        name=\"filter\"\n        title=\"Use this field to filter contacts by contact's name\"\n        value={filter}\n        onChange={changeFilter}\n      />\n    </>\n  );\n};\n\nexport { Filter };\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  max-width: calc(100% - 40px);\n  padding: 0 20px 20px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  cursor: pointer;\n  justify-content: start;\n  align-items: center;\n  font-weight: 500;\n  margin-bottom: 10px;\n  &::before {\n    content: '';\n    width: 6px;\n    height: 6px;\n    background-color: #000000;\n    border-radius: 50%;\n    margin-right: 10px;\n  }\n  & > button {\n    display: none;\n    cursor: pointer;\n    width: 80px;\n    border-radius: 10px;\n    background-color: transparent;\n    margin-left: 20px;\n\n    &:hover {\n      background-color: aqua;\n    }\n  }\n  &:hover > button {\n    display: block;\n  }\n`;\n\nexport const Name = styled.span`\n  width: 160px;\n`;\n\nexport const Number = styled.span`\n  width: 80px;\n`;\n\nexport const Message = styled.li`\n  margin: 0px;\n`;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { List, Item, Name, Number, Message } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredList, selectLoading } from 'redux/selectors';\nimport { fetchContacts, deleteContact } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\n\n//\nconst ContactList = () => {\n  const filteredList = useSelector(selectFilteredList);\n  const isLoading = useSelector(selectLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  //\n  const removeContact = e => {\n    const idx = e.currentTarget.dataset.id;\n    dispatch(deleteContact(idx));\n  };\n  //\n  return isLoading === `pending` ? (\n    <Loader />\n  ) : (\n    <List>\n      {filteredList.length !== 0 ? (\n        filteredList.map(({ id, name, number }) => (\n          <Item key={id}>\n            <Name>{name}:</Name>\n            <Number>{number}</Number>\n            <button data-id={id} onClick={removeContact}>\n              Delete\n            </button>\n          </Item>\n        ))\n      ) : (\n        <Message>Your contact list is empty</Message>\n      )}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport { ContactList };\n","import { Form } from 'components/Form/Form';\nimport { Wrapper, Title, Container } from './Contacts.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/Contacts/ContactList';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Wrapper>\n        <Container>\n          <Title>Phonebook</Title>\n          <Form />\n        </Container>\n        <Container>\n          <Title>Contacts</Title>\n          <Filter />\n          <ContactList />\n        </Container>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Label","styled","Input","Form","Button","PhoneBook","SubmitForm","ChangeInput","options","name","number","onSubmit","type","value","title","required","onChange","disabled","contactList","useSelector","selectContactList","dispatch","useDispatch","useState","setName","setNumber","state","evt","preventDefault","data","find","alert","console","log","addContact","target","Wrapper","Title","Container","handleChangeFilter","filterReducer","Filter","filter","selectFilter","htmlFor","id","e","List","Item","Name","Number","Message","ContactList","filteredList","selectFilteredList","isLoading","selectLoading","useEffect","fetchContacts","removeContact","idx","currentTarget","dataset","deleteContact","Loader","length","map","onClick"],"sourceRoot":""}